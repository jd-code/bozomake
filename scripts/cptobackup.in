#!/bin/bash
#
# this one try to safely copy to backup the list of files
#
# $Id$
# Bozomake Copyright (C) 2002,2003 Cristelle Barillon & Jean-Daniel Pauget
#
# bozomake@disjunkt.com  -  http://bozomake.disjunkt.com/
# 
# Bozomake is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# Bozomake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GenRythm; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# you can also try the web at http://www.gnu.org/
# 
# bozomake@disjunkt.com  -  http://bozomake.disjunkt.com/

usage () {
    echo "usage: $0 [--help] [--version] [--backdir] filnames ..."
}

if [ "${1}" = "--version" ]
then
    echo "Bozomake's cptobackup version @VERSION@ - "'$Id$'
    echo "Bozomake @VERSION@ - (c) 2002-2003-2004 Jean-Daniel Pauget"
    echo
    exit 0
fi

if [ "${1}" = "--help" ]
then
    usage
    exit 1
fi

if [ "${1}" = "--backdir" ]
then
    echo "creating ./.mvtobackup ..."
    mkdir "./.mvtobackup" && echo "ok" || echo "failed"
    if [ ! -d "./.mvtobackup" ]
    then
	echo "the directory ./.mvtobackup isn't here ??? bailing out !"
	echo "NO BACKUP WHERE PERFORMED"
	exit 1
    fi
    shift
fi

TSTAMP=`date +"%Y%m%d"`

construct_backupname() {
    if [ ! "${1}" ]
    then
	echo "construct_backupname needs one arg !!"  1>&2
	echo "nonono_notaname"
	return 1
    fi

    DIRNAME=`dirname "${1}"`
    BASENAME=`basename "${1}"`

    if [ -d "${DIRNAME}/.mvtobackup" ]
    then
	PREPROP="${DIRNAME}/.mvtobackup/"
    else
	PREPROP="${DIRNAME}/"
    fi

    PROP="${PREPROP}${BASENAME}-${TSTAMP}"
    if [ ! -e "${PROP}" ]
    then
	echo "${PROP}"
	return 0
    else
	N=1
	PROP="${PREPROP}${BASENAME}-${TSTAMP}-"`printf "%02d\n" ${N}`
	while [ -e "${PROP}" -a "${N}" -lt 100 ]
	do
	   N=$[ ${N}+1 ]
	    PROP="${PREPROP}${BASENAME}-${TSTAMP}-"`printf "%02d\n" ${N}`
	done
    fi
    if [ ! -e "${PROP}" ]
    then
	echo "${PROP}"
        return 0
    fi

    echo "nonono_notaname"
    return 1
}

ERROR=NO

if [ ! "${1}" ]
then
    usage
    exit 1
fi

for NAME in ${*}
do
    LASTCHAR=`echo "${NAME}" | brev | cut -b1`
    if [ "${LASTCHAR}" = "/" ]
    then
	NAME=`echo "${NAME}" | brev | cut -b2- | brev`
    fi

    if [ -e "${NAME}" ]
    then
	if [ -f "${NAME}" ] ############## regular file
	then
	    PROPNAME=`construct_backupname "${NAME}"`
	    if [ "nonono_notanameE" = "${PROPNAME}"E ]
	    then
		echo "could NOT backup move ${NAME} !!!!!!!" 1>&2
		ERROR=YES
	    else
		echo cp "${NAME}" "${PROPNAME}"
		cp "${NAME}" "${PROPNAME}"
	    fi
	else
	if [ -d "${NAME}" ] ############## regular directory
	then
	    PROPNAME=`construct_backupname "${NAME}"`
	    if [ "nonono_notanameE" = "${PROPNAME}"E ]
	    then
		echo "could NOT backup move ${NAME} !!!!!!!" 1>&2
		ERROR=YES
	    else
		echo cp -a "[dir]" "${NAME}" "[dir]" "${PROPNAME}"
		cp -a "${NAME}" "${PROPNAME}"
	    fi
	else
	if [ -L "${NAME}" ] ############## regular symbolic-link
	then
	    echo "${NAME} is a symlink !!! cannot make a backup copy of it"
	    ERROR=YES
	else		    ############# none of the above
	    echo "${NAME} is not a regular file/dir/symlink !!! skipped"
	    ERROR=YES
	fi
	fi
	fi
    else
	echo "${NAME} doesn't exist... skipped"
    fi
done

if [ ${ERROR} = "YES" ]
then
    exit 1
fi

